{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Documents/Lumos-Digital/frontend/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../axios'; // Asegúrate de que axios esté correctamente configurado\nimport { TextInput, Button } from './FormElements'; // Componentes reutilizables\nimport { useNavigate } from 'react-router-dom'; // Para redirigir después del login exitoso\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    contrasena: ''\n  });\n  const [error, setError] = useState(''); // Estado para manejar el mensaje de error\n  const navigate = useNavigate(); // Hook de navegación para redirigir\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Realiza la solicitud al backend para el login\n      const res = await axios.post('/login', formData);\n\n      // Asumiendo que la respuesta contiene { token, rol }\n      localStorage.setItem('token', res.data.token); // Almacena el token JWT en localStorage\n      localStorage.setItem('userRole', res.data.rol); // Almacena el rol del usuario en localStorage\n\n      console.log('Login exitoso, token y rol almacenados');\n      setError(''); // Limpia cualquier mensaje de error previo\n      navigate('/perfil'); // Redirige al perfil del usuario después del login exitoso\n    } catch (error) {\n      // Maneja cualquier error en el proceso de login\n      console.error('Error en el inicio de sesión:', error);\n      setError('Error en el inicio de sesión. Por favor, verifica tus credenciales.'); // Mensaje de error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Email\",\n      value: formData.email,\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Contrase\\xF1a\",\n      value: formData.contrasena,\n      onChange: e => setFormData({\n        ...formData,\n        contrasena: e.target.value\n      }),\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Iniciar Sesi\\xF3n\",\n      type: \"submit\",\n      onClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"9gMn+c3ArSI9qT5UipSFay5pISE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","TextInput","Button","useNavigate","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","contrasena","error","setError","navigate","handleLogin","e","preventDefault","res","post","localStorage","setItem","data","token","rol","console","log","onSubmit","children","label","value","onChange","target","type","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/luistejada/Documents/Lumos-Digital/frontend/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from '../axios'; // Asegúrate de que axios esté correctamente configurado\nimport { TextInput, Button } from './FormElements'; // Componentes reutilizables\nimport { useNavigate } from 'react-router-dom'; // Para redirigir después del login exitoso\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    contrasena: '',\n  });\n  const [error, setError] = useState<string>(''); // Estado para manejar el mensaje de error\n  const navigate = useNavigate(); // Hook de navegación para redirigir\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      // Realiza la solicitud al backend para el login\n      const res = await axios.post('/login', formData);\n      \n      // Asumiendo que la respuesta contiene { token, rol }\n      localStorage.setItem('token', res.data.token); // Almacena el token JWT en localStorage\n      localStorage.setItem('userRole', res.data.rol); // Almacena el rol del usuario en localStorage\n      \n      console.log('Login exitoso, token y rol almacenados');\n      setError(''); // Limpia cualquier mensaje de error previo\n      navigate('/perfil'); // Redirige al perfil del usuario después del login exitoso\n    } catch (error) {\n      // Maneja cualquier error en el proceso de login\n      console.error('Error en el inicio de sesión:', error);\n      setError('Error en el inicio de sesión. Por favor, verifica tus credenciales.'); // Mensaje de error\n    }\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <TextInput\n        label=\"Email\"\n        value={formData.email}\n        onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n        type=\"email\"\n      />\n      <TextInput\n        label=\"Contraseña\"\n        value={formData.contrasena}\n        onChange={(e) => setFormData({ ...formData, contrasena: e.target.value })}\n        type=\"password\"\n      />\n      <Button text=\"Iniciar Sesión\" type=\"submit\" onClick={() => {}} />\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Muestra el error si existe */}\n    </form>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}